import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
	id 'java'
	id 'idea'
	id 'maven-publish'
	id 'checkstyle'
	id 'org.springframework.boot'
	id 'io.spring.javaformat'
	id 'com.google.cloud.tools.jib'
	id 'com.google.protobuf'
}

group = 'org.envoyops'
version = "${envoyopsVersion}"


java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}


idea {
	module {
		downloadSources = true
		downloadJavadoc = true
	}
}

dependencies {
	// spring
	implementation platform(SpringBootPlugin.BOM_COORDINATES)
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// armeria
	implementation platform("com.linecorp.armeria:armeria-bom:${armeriaVersion}")
	implementation 'com.linecorp.armeria:armeria-spring-boot3-starter'
	implementation 'com.linecorp.armeria:armeria-grpc'
	implementation "io.projectreactor:reactor-core:${projectReactorVersion}"

	// envoy control plane
	implementation("io.envoyproxy.controlplane:server:${envoyJavaControlPlaneVersion}")
	implementation("io.envoyproxy.controlplane:api:${envoyJavaControlPlaneVersion}")
	implementation("io.envoyproxy.controlplane:cache:${envoyJavaControlPlaneVersion}")
}

dependencies {
	checkstyle("io.spring.javaformat:spring-javaformat-checkstyle:${springJavaFormatVersion}")
	testImplementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation platform('org.junit:junit-bom:5.10.0')
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation "org.apache.httpcomponents.client5:httpclient5:${httpClient5Version}"
}

jib {
	from {
		image = 'eclipse-temurin:21'
	}
	to {
		image = 'ghcr.io/thinkhard-j-park/envoy-java-ctlp'
		auth {
			username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
			password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
		}
		tags = ["${version}.${new Date().format("yyyy-MM-dd-HH-mm-ss")}", 'latest']
	}
}

repositories {
	mavenCentral()
	maven {
		url = uri("${repoUrl}")
		credentials {
			username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
			password = project.findProperty("gpr.key") ?: System.getenv("GITHUB_TOKEN")
		}
	}
}

test {
	useJUnitPlatform()
}